{"version":3,"sources":["serviceWorker.js","RichEditor.js","redux/actions/index.js","App.js","redux/api/request.js","redux/reducers.js","redux/api/sagas.js","redux/sagas/index.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","RichEditorExample","props","editorEl","useRef","onChange","editorState","className","onToggle","inlineStyle","RichUtils","toggleInlineStyle","onClick","current","focus","customStyleMap","styleMap","handleKeyCommand","command","newState","onTab","e","ref","spellCheck","CODE","backgroundColor","fontFamily","fontSize","padding","StyleButton","active","onMouseDown","preventDefault","style","label","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","map","type","key","has","types","SUBMIT_TEMPLATE","submitTemplate","createAction","TemplateSchema","Yup","shape","email","required","subject","MyForm","values","touched","dirty","errors","handleChange","handleBlur","handleSubmit","handleReset","setFieldValue","isSubmitting","onSubmit","htmlFor","display","id","placeholder","value","onBlur","color","marginTop","disabled","App","dispatch","useDispatch","initialValues","EditorState","createEmpty","validationSchema","actions","setSubmitting","href","process","alert","component","requestPending","requestSuccess","handleActions","state","result","payload","axios","defaults","baseURL","defaultHeaders","rootSaga","method","url","header","success","fail","payloadSuccess","payloadFail","body","params","onSuccess","onFail","put","call","request","headers","Object","assign","data","res","response","message","errRes","get","status","console","warn","api","takeLatest","history","createBrowserHistory","middleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","composeEnhancers","compose","store","createStore","combineReducers","reducers","run","saga","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sRAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2DCbC,SAASC,EAAkBC,GAChC,IAAMC,EAAWC,iBAAO,MAExB,SAASC,EAAUC,GACjBJ,EAAMG,SAAS,cAAeC,GAJO,IA+B/BA,EAAgBJ,EAAhBI,YAIR,OACE,yBAAKC,UAAU,mBACb,kBAAC,EAAD,CACED,YAAaA,EACbE,SAdN,SAA4BC,GAC1BJ,EACEK,YAAUC,kBAAkBT,EAAMI,YAAaG,OAc/C,yBAAKF,UARO,oBAQeK,QAlC/B,WACET,EAASU,QAAQC,UAkCb,kBAAC,SAAD,CACEC,eAAgBC,EAChBV,YAAaA,EACbW,iBAlCR,SAA2BC,GAAW,IAC5BZ,EAAgBJ,EAAhBI,YACFa,EAAWT,YAAUO,iBAAiBX,EAAaY,GACzD,QAAIC,IACFd,EAASc,IACF,IA8BHd,SAAUA,EACVe,MA1BR,SAAgBC,GAEdhB,EAASK,YAAUU,MAAMC,EAAGnB,EAAMI,YADjB,KA0BXgB,IAAKnB,EACLoB,YAAY,MAOtB,IAAMP,EAAW,CACfQ,KAAM,CACJC,gBAAiB,sBACjBC,WAAY,gDACZC,SAAU,GACVC,QAAS,IAGb,SAASC,EAAY3B,GAMnB,IAAIK,EAAY,yBAIhB,OAHIL,EAAM4B,SACRvB,GAAa,4BAGb,0BAAMA,UAAWA,EAAWwB,YAV9B,SAAmBV,GACjBA,EAAEW,iBACF9B,EAAMM,SAASN,EAAM+B,SASlB/B,EAAMgC,OAKb,IAAIC,EAAgB,CAClB,CAAED,MAAO,OAAQD,MAAO,QACxB,CAAEC,MAAO,SAAUD,MAAO,UAC1B,CAAEC,MAAO,YAAaD,MAAO,cAEzBG,EAAsB,SAAAlC,GAC1B,IAAImC,EAAenC,EAAMI,YAAYgC,wBACrC,OACE,yBAAK/B,UAAU,uBACZ4B,EAAcI,IAAI,SAAAC,GAAI,OACrB,kBAACX,EAAD,CACEY,IAAKD,EAAKN,MACVJ,OAAQO,EAAaK,IAAIF,EAAKP,OAC9BC,MAAOM,EAAKN,MACZ1B,SAAUN,EAAMM,SAChByB,MAAOO,EAAKP,Y,SCjGTU,EAAQ,CACjBC,gBAHoB,mBAMXC,EAAiBC,YANN,mB,QCYlBC,EAAiBC,WAAaC,MAAM,CACxCC,MAAOF,WACJE,MAAM,uBACNC,SAAS,aACZC,QAASJ,WAAaG,SAAS,eAG3BE,EAAS,SAAC,GAAD,IACbC,EADa,EACbA,OACAC,EAFa,EAEbA,QACAC,EAHa,EAGbA,MACAC,EAJa,EAIbA,OACAC,EALa,EAKbA,aACAC,EANa,EAMbA,WACAC,EAPa,EAObA,aACAC,EARa,EAQbA,YACAC,EATa,EASbA,cACAC,EAVa,EAUbA,aAVa,OAYb,0BAAMC,SAAUJ,GACd,2BAAOK,QAAQ,QAAQhC,MAAO,CAAEiC,QAAS,UAAzC,SAGA,2BACEC,GAAG,QACHC,YAAY,mBACZ5B,KAAK,QACL6B,MAAOf,EAAOJ,MACd7C,SAAUqD,EACVY,OAAQX,IAETF,EAAOP,OACRK,EAAQL,OACN,yBAAKjB,MAAO,CAAEsC,MAAO,MAAOC,UAAW,UACpCf,EAAOP,OAGZ,2BAAOe,QAAQ,UAAUhC,MAAO,CAAEiC,QAAS,QAASM,UAAW,UAA/D,WAGA,2BACEL,GAAG,UACHC,YAAY,UACZ5B,KAAK,OACL6B,MAAOf,EAAOF,QACd/C,SAAUqD,EACVY,OAAQX,IAETF,EAAOL,SACRG,EAAQH,SACN,yBAAKnB,MAAO,CAAEsC,MAAO,MAAOC,UAAW,UACpCf,EAAOL,SAGZ,2BACEa,QAAQ,QACRhC,MAAO,CAAEiC,QAAS,QAASM,UAAW,UAFxC,WAMA,kBAACvE,EAAD,CACEK,YAAagD,EAAOhD,YACpBD,SAAUyD,EACVQ,OAAQX,IAEV,4BACEnB,KAAK,SACLjC,UAAU,UACVK,QAASiD,EACTY,UAAWjB,GAASO,GAJtB,SAQA,4BAAQvB,KAAK,SAASiC,SAAUV,GAAhC,UAqCWW,MA/Bf,SAAaxE,GACX,IAAMyE,EAAWC,cAEjB,OACE,yBAAKrE,UAAU,OACb,kBAAC,IAAD,CACEsE,cAAe,CACbvE,YAAa,IAAIwE,cAAYC,YAC7B7B,MAAO,GACPE,QAAS,IAEX4B,iBAAkBjC,EAClBiB,SAAU,SAACV,EAAQ2B,GACjBN,EAAS9B,EAAe,CACtB,KAAQS,EACR,UAAa,WACX2B,EAAQC,eAAc,GACtBrF,OAAOC,SAASqF,KAAOC,8BAEzB,OAAU,WACRC,MAAM,0CACNJ,EAAQC,eAAc,QAI5BI,UAAWjC,M,mCCtHNkC,EAAiB,SAAA/C,GAAI,gBAAOA,EAAP,aACrBgD,EAAiB,SAAAhD,GAAI,gBAAOA,EAAP,a,4NCGnBiD,kBAAc,eAC1BD,EAAe7C,EAAMC,iBACpB,SAAC8C,EAAD,U,qVAAA,IACKA,EADL,CAEEC,OAFF,EAAUC,YAIX,I,uFCJHC,IAAMC,SAASC,QAAUX,wBAEzB,IAAMY,EAAiB,CACrB,OAAgB,mBAChB,eAAgB,oB,WCAOC,GANnBpD,EDSS,gBACbL,EADa,EACbA,KACA0D,EAFa,EAEbA,OACAC,EAHa,EAGbA,IACAC,EAJa,EAIbA,OACAC,EALa,EAKbA,QACAC,EANa,EAMbA,KACAC,EAPa,EAObA,eAPa,EAQbC,YARa,gBAST,8GAUF,OAVeZ,EAAb,EAAaA,QAEfa,GAFE,EAMAb,GAAW,IAJba,KACAC,EAHE,EAGFA,OACAC,EAJE,EAIFA,UACAC,EALE,EAKFA,OALE,kBAUIC,YAAI,CACRrE,KAAM+C,EAAe/C,KAXrB,OAcU,OAdV,SAcgBsE,YAAKjB,IAAMkB,QAAS,CACpCZ,IAA0B,oBAATA,EAAsBA,EAAIP,GAAWO,EACtDD,OAAUA,GAAU,MACpBc,QAAUC,OAAOC,OAAO,GAAIlB,EAAgBI,GAC5Ce,KAAUV,EACVC,WAnBA,OAwBF,OAVMU,EAdJ,OAsBMD,EAASC,EAATD,KAtBN,UAwBIN,YAAI,CACRrE,KAAMgD,EAAehD,GACrBoD,QAASW,GAA6C,oBAApBA,EACtBA,EAAeY,GAAQA,IA3BnC,WA8BFR,GAAmC,oBAAfA,GAA6BA,EAAUQ,IAEvDd,GAA+B,oBAAbA,EAhCpB,iBAiCA,OAjCA,UAiCMS,YAAKT,EAASc,GAjCpB,0DAsCME,EAtCN,KAsCMA,SAAUN,EAtChB,KAsCgBA,QAASO,EAtCzB,KAsCyBA,QACrBC,EAASC,cAAI,EAAD,GAAM,WAAN,MAClBZ,GAAUA,EAAOW,GACjBjB,GAAQA,EAAKiB,GAETF,GAIMI,EAAiBJ,EAAjBI,OAAQN,EAASE,EAATF,KAChBO,QAAQC,KAAR,wBAA8BF,EAA9B,aAAyCN,KAEhCJ,EAETW,QAAQC,KAAR,wBAA8BZ,GAAWA,GAIzCW,QAAQC,KAAR,wBAA8BZ,GAAWO,GAxDzC,uDClBiBM,CAAI,CACzB1B,OAAQ,OACR1D,KAAMG,EAAMC,gBACZuD,IAAK,WAGQ,SAAUF,IAAV,gEACb,OADa,SACP4B,YAAWlF,EAAMC,gBAAiBC,GAD3B,sCCAR,IAAMiF,EAAUC,cAGjBC,EAAaC,2BAAiBH,GAG9BI,EAAiBC,cAEjBC,EAAc,CAACJ,EAAYE,GAE3BG,EAAY,CAACC,IAAe,WAAf,EAAmBF,IAIhCG,EAKAC,IAKOC,EAAQC,YACnBC,YAAgBC,GAChB,GACAL,EAAgB,WAAhB,EAAoBF,IAGtBH,EAAeW,IAAIC,GAEJL,QChCfM,IAASC,OACL,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAEFQ,SAASC,eAAe,STmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.694f7206.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Editor, RichUtils } from 'draft-js';\n\nimport React from 'react';\nimport { useRef } from 'react';\n\nexport function RichEditorExample(props) {\n  const editorEl = useRef(null)\n\n  function onChange( editorState ) {\n    props.onChange('editorState', editorState);\n  };\n\n  function focus() {\n    editorEl.current.focus();\n  }\n\n  function handleKeyCommand( command ) {\n    const { editorState } = props;\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      onChange(newState);\n      return true;\n    }\n    return false;\n  };\n\n  function onTab( e ) {\n    const maxDepth = 4;\n    onChange(RichUtils.onTab(e, props.editorState, maxDepth));\n  };\n  function toggleInlineStyle( inlineStyle ) {\n    onChange(\n      RichUtils.toggleInlineStyle(props.editorState, inlineStyle)\n    );\n  };\n  \n  const { editorState } = props;\n  \n  let className = 'RichEditor-editor';\n  \n  return (\n    <div className=\"RichEditor-root\">\n      <InlineStyleControls\n        editorState={editorState}\n        onToggle={toggleInlineStyle}\n      />\n      <div className={className} onClick={focus}>\n        <Editor\n          customStyleMap={styleMap}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          onChange={onChange}\n          onTab={onTab}\n          ref={editorEl}\n          spellCheck={true}\n        />\n      </div>\n    </div>\n  );\n}\n// Custom overrides for \"code\" style.\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n};\nfunction StyleButton(props) {\n  function onToggle( e ) {\n    e.preventDefault();\n    props.onToggle(props.style);\n  };\n\n  let className = 'RichEditor-styleButton';\n  if (props.active) {\n    className += ' RichEditor-activeButton';\n  }\n  return (\n    <span className={className} onMouseDown={onToggle}>\n      {props.label}\n    </span>\n  );\n}\n\nvar INLINE_STYLES = [\n  { label: 'Bold', style: 'BOLD' },\n  { label: 'Italic', style: 'ITALIC' },\n  { label: 'Underline', style: 'UNDERLINE' },\n];\nconst InlineStyleControls = props => {\n  var currentStyle = props.editorState.getCurrentInlineStyle();\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map(type =>\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\n","import { createAction } from 'redux-actions'\r\n\r\nconst SUBMIT_TEMPLATE = 'SUBMIT_TEMPLATE'\r\n\r\nexport const types = {\r\n    SUBMIT_TEMPLATE\r\n}\r\n\r\nexport const submitTemplate = createAction(SUBMIT_TEMPLATE)\r\n","import './formik-demo.css';\nimport './rich-editor.css';\n// Helper styles for demo\nimport './formik-demo.css';\n\nimport * as Yup from 'yup';\n\nimport { EditorState } from 'draft-js';\nimport { Formik } from 'formik';\nimport React from 'react';\nimport { RichEditorExample } from './RichEditor';\nimport {submitTemplate} from 'redux/actions'\nimport { useDispatch } from 'react-redux'\n\nconst TemplateSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"That's not an email\")\n    .required('Required!'),\n  subject: Yup.string().required('Required!'),\n})\n\nconst MyForm = ({\n  values,\n  touched,\n  dirty,\n  errors,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  handleReset,\n  setFieldValue,\n  isSubmitting,\n}) => (\n  <form onSubmit={handleSubmit}>\n    <label htmlFor=\"email\" style={{ display: 'block' }}>\n      Email\n    </label>\n    <input\n      id=\"email\"\n      placeholder=\"Enter your email\"\n      type=\"email\"\n      value={values.email}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n    {errors.email &&\n    touched.email && (\n      <div style={{ color: 'red', marginTop: '.5rem' }}>\n        {errors.email}\n      </div>\n    )}\n    <label htmlFor=\"subject\" style={{ display: 'block', marginTop: '.5rem'  }}>\n      Subject\n    </label>\n    <input\n      id=\"subject\"\n      placeholder=\"Subject\"\n      type=\"text\"\n      value={values.subject}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n    {errors.subject &&\n    touched.subject && (\n      <div style={{ color: 'red', marginTop: '.5rem' }}>\n        {errors.subject}\n      </div>\n    )}\n    <label\n      htmlFor=\"email\"\n      style={{ display: 'block', marginTop: '.5rem' }}\n    >\n      Content\n    </label>\n    <RichEditorExample\n      editorState={values.editorState}\n      onChange={setFieldValue}\n      onBlur={handleBlur}\n    />\n    <button\n      type=\"button\"\n      className=\"outline\"\n      onClick={handleReset}\n      disabled={!dirty || isSubmitting}\n    >\n      Reset\n    </button>\n    <button type=\"submit\" disabled={isSubmitting}>\n      Save\n    </button>\n  </form>\n);\n\nfunction App(props) {\n  const dispatch = useDispatch();\n  \n  return (\n    <div className=\"app\">\n      <Formik\n        initialValues={{\n          editorState: new EditorState.createEmpty(),\n          email: '',\n          subject: '',\n        }}\n        validationSchema={TemplateSchema}\n        onSubmit={(values, actions) => {\n          dispatch(submitTemplate({\n            'body': values,\n            'onSuccess': () => {\n              actions.setSubmitting(false);\n              window.location.href = process.env.REACT_APP_SERVER + '/list'\n            },\n            'onFail': () => {\n              alert(\"Sorry there are some error, try again!\")\n              actions.setSubmitting(false)\n            }\n          }));\n        }}\n        component={MyForm} \n      />\n    </div>\n  )\n};\n\nexport default App;","export const requestPending = type => `${type}/pending`\r\nexport const requestSuccess = type => `${type}/success`\r\nexport const requestFail = type => `${type}/fail`\r\n","import { handleActions } from 'redux-actions'\r\nimport { requestSuccess } from './api/request'\r\nimport { types } from './actions'\r\n\r\nexport default handleActions({\r\n  [requestSuccess(types.SUBMIT_TEMPLATE)]:\r\n    (state, { payload }) => ({\r\n      ...state,\r\n      result: payload\r\n    })\r\n}, {})\r\n","import { call, put } from 'redux-saga/effects'\r\nimport { requestPending, requestSuccess } from './request'\r\n\r\nimport axios from 'axios'\r\nimport { get } from 'lodash'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER\r\n\r\nconst defaultHeaders = {\r\n  'Accept':       'application/json',\r\n  'Content-Type': 'application/json'\r\n}\r\n\r\nexport default ({\r\n  type,\r\n  method,\r\n  url,\r\n  header,\r\n  success,\r\n  fail,\r\n  payloadSuccess,\r\n  payloadFail\r\n}) => function* ({ payload }) {\r\n  const {\r\n    body,\r\n    params,\r\n    onSuccess,\r\n    onFail\r\n  } = payload || {};\r\n\r\n  try {\r\n    \r\n    yield put({\r\n      type: requestPending(type)\r\n    });\r\n    \r\n    const res = yield call(axios.request, {\r\n      url:      typeof(url) === 'function' ? url(payload) : url,\r\n      method:   method || 'get',\r\n      headers:  Object.assign({}, defaultHeaders, header),\r\n      data:     body,\r\n      params\r\n    })\r\n\r\n    const { data } = res\r\n    \r\n    yield put({\r\n      type: requestSuccess(type),\r\n      payload: payloadSuccess && typeof(payloadSuccess) === 'function'\r\n                ? payloadSuccess(data) : data\r\n    })\r\n\r\n    onSuccess && typeof(onSuccess) === 'function' && onSuccess(data)\r\n\r\n    if (success && typeof(success) === 'function') {\r\n      yield call(success, data)\r\n    }\r\n    \r\n  } catch (err) {\r\n\r\n    const { response, request, message } = err\r\n    const errRes = get(err, 'response', err)\r\n    onFail && onFail(errRes)\r\n    fail && fail(errRes)\r\n\r\n    if (response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n\r\n      const { status, data } = response\r\n      console.warn(`Request error ${status}: ${data}`)\r\n\r\n    } else if (request) {\r\n      // The request was made but no response was received\r\n      console.warn(`Request error ${request}`, request)\r\n\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.warn(`Request error ${request}`, message)\r\n    }\r\n  }\r\n}\r\n","import api from '../api/sagas'\r\nimport { takeLatest } from 'redux-saga/effects'\r\nimport { types } from '../actions'\r\n\r\nconst submitTemplate = api({\r\n  method: 'post',\r\n  type: types.SUBMIT_TEMPLATE,\r\n  url: '/store'\r\n})\r\n\r\nexport default function* rootSaga () {\r\n  yield takeLatest(types.SUBMIT_TEMPLATE, submitTemplate)\r\n}\r\n","import * as reducers from './reducers';\r\n\r\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport saga from './sagas';\r\n\r\n// Create a history of your choosing (we're using a browser history in this case)\r\nexport const history = createBrowserHistory();\r\n\r\n// Build the middleware for intercepting and dispatching navigation actions\r\nconst middleware = routerMiddleware(history);\r\n\r\n// Redux-saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [middleware, sagaMiddleware];\r\n\r\nconst enhancers = [applyMiddleware(...middlewares)];\r\n\r\n// If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== 'production' &&\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : compose;\r\n/* eslint-enable */\r\n\r\n// Add the reducer to your store on the `router` key\r\n// Also apply our middleware for navigating\r\nexport const store = createStore(\r\n  combineReducers(reducers),\r\n  {},\r\n  composeEnhancers(...enhancers)\r\n);\r\n\r\nsagaMiddleware.run(saga);\r\n\r\nexport default store;\r\n","import './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}